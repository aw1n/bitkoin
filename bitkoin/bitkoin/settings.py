"""
Django settings for bitkoin project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os.path 
import sys

# BITCOIN_MINIMUM_CONFIRMATIONS = 1
# BITCOIND_CONNECTION_STRING = "http://root:password@127.0.0.1:8332"


# # Use Django signals to tell the system when new money has arrived to your wallets
# BITCOIN_TRANSACTION_SIGNALING = True


# import dj_database_url


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9d4nx10uaavfa_q!%9w#5-*5dqqoprvb$jmn06bp%rz1^r0+eo'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

CRISPY_TEMPLATE_PACK = 'bootstrap3'

# Application definition

# django.setup()
INSTALLED_APPS = (
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'BitKoin',
    'bootstrap3',
    'registration',
    'cryptoassets.django',
    'crispy_forms',
    
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'bitkoin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['/home/caleb/Desktop/bitkoin/bitkoin/static/templates','/home/caleb/Desktop/bitkoin/bitkoin/static/templates/registration',],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bitkoin.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

#DATABASES['default'] =  dj_database_url.config()
#DATABASES['default']['ENGINE'] = 'django_postgrespool'

DATABASES = {
     'default': {
         'ENGINE': 'django.db.backends.sqlite3',
         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
     }
 }


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'staticfiles'
STATICFILES_DIRS  = (
    '/home/caleb/Desktop/bitkoin/bitkoin/static',

 )
# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

CRYPTOASSETS = {

    # It is recommended to use separate database for cryptoassets,
    # but you can share the database with Django as well.
    # In any case, cryptoassets
    # will use a separate db connection.
    # cryptoassets.django does not read the existing DATABASES setting.
    # Configure the connection using SQLAlchemy syntax:
    # http://cryptoassetscore.readthedocs.org/en/latest/config.html#database
    "database": {
       "url":"sqlite:///db.sqlite3",
       "echo":False,
    },

    # Configure block.io API service with Bitcoin testnet
    # (let's not play around with real Bitcoins yet)
    "coins": {
        "btc": {
            "backend": {
                "class": "cryptoassets.core.backend.blockio.BlockIo",
                "api_key": "b206-e7c9-d5bd-be4e",
                "network": "btctest",
                "pin": "virgil11",
                # Cryptoassets helper process will use this UNIX named pipe to communicate
                # with bitcoind
                "walletnotify": {
                    "class": "cryptoassets.core.backend.blockiowebsocket.BlockIoWebsocketNotifyHandler",

                },
            }
        },
    },

    # Bind cryptoassets.core event handler to Django dispacth wrapper
    "events": {
        "django": {
            "class": "cryptoassets.core.event.python.InProcessEventHandler",
            "callback": "cryptoassets.django.incoming.handle_tx_update"
        }
    },

    # Start simple status at port 9001 for diagnostics
    "status_server": {
        "ip": "127.0.0.1",
        "port": 9001
    }
}
#django registration redux settings
ACCOUNT_ACTIVATION_DAYS = 7
# REGISTRATION_AUTO_LOGIN = True

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'ejakaitcaleb@gmail.com'
EMAIL_HOST_PASSWORD = 'caleb010595'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
SITE_ID= 1
# REGISTRATION_AUTO_LOGIN = True